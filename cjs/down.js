"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(exports,{downloadYoutubeAll:function(){return u},downloadYoutubePlaylist:function(){return p},downloadYoutubeSubtitles:function(){return i},downloadYoutubeVideo:function(){return c}});const e=/*#__PURE__*/s(require("fs")),t=/*#__PURE__*/s(require("child_process")),r=require("youtube-captions-scraper"),o=require("./rest.js"),n=require("jnu-abc");function s(e){return e&&e.__esModule?e:{default:e}}const a=async(e,t)=>{let o=t.split(",").map(e=>e.trim());console.log("languages: ",t);let n=[];for(let t of o){console.log("language: ",t);try{let o=await (0,r.getSubtitles)({videoID:e,lang:t});console.log(`성공적으로 가져온 자막 언어: ${t||"자동 감지"}`),n.push({language:t,captions:o})}catch(e){console.log(`${t||"자동 감지"} 자막을 가져오는 데 실패했습니다. 다음 언어 시도 중...`)}}return n},l=(e,t="vtt")=>{let r=e=>{let t=new Date(1e3*e),r=t.getUTCHours().toString().padStart(2,"0"),o=t.getUTCMinutes().toString().padStart(2,"0"),n=t.getUTCSeconds().toString().padStart(2,"0"),s=t.getUTCMilliseconds().toString().padStart(3,"0");return`${r}:${o}:${n},${s}`};switch(t.toLowerCase()){case"vtt":return`WEBVTT

${e.map(e=>`${r(e.start).replace(",",".")} --> ${r(parseFloat(e.start)+parseFloat(e.dur)).replace(",",".")}
${e.text}`).join("\n\n")}`;case"srt":return e.map((e,t)=>`${t+1}
${r(e.start)} --> ${r(parseFloat(e.start)+parseFloat(e.dur))}
${e.text}`).join("\n\n");default:return e.map(e=>e.text).join("\n")}},i=async(t,{languages:r="ko,en",formatType:o="vtt",outputDir:n="."}={})=>{let s=await a(t,r);for(let e of s)e.captions=l(e.captions,o);let i=[],c=0;for(let r of s){let s=`${n}/${t}_${r.language}.${o}`;0===c&&(s=`${n}/${t}.${o}`),e.default.writeFileSync(s,r.captions),i.push(s),c++}return i},c=async(e,{resolution:r="1080",bitrate:o="128",outputDir:n="."}={})=>{let s=`https://www.youtube.com/watch?v=${e}`,a=`yt-dlp -S vcodec:h264,fps,res:${r},acodec:m4a -o "${n}/${e}.mp4" ${s}`;return console.log("command: ",a),t.default.execSync(a),`${n}/${e}.mp4`},u=async(e,{resolution:t="1080",bitrate:r="128",languages:s="ko,en",formatType:a="vtt",outputDir:l=".",downType:u="VSI",key:p=""})=>{let d={resolution:t,bitrate:r,languages:s,formatType:a,outputDir:l,downs:[]};for(let g of((0,n.makeDir)(l),e.split(","))){let e={};try{if(u.includes("S")){let t=await i(g,{languages:s,formatType:a,outputDir:l});t&&(e.subtitles=t.map(e=>e.split("/").pop()).join("|"))}if(u.includes("V"))try{let o=await c(g,{resolution:t,bitrate:r,outputDir:l});o&&(e.video=o.split("/").pop(),d.downs.push(e))}catch(e){console.error("An error occurred:",e instanceof Error?e.message:String(e));continue}if(u.includes("I"))try{let e=await (0,o.videosFromVideoIds)([g],p);console.log("info: ",e),(0,n.saveJson)(`${l}/${g}.json`,e)}catch(e){console.error("An error occurred:",e instanceof Error?e.message:String(e));continue}}catch(e){return console.error("An error occurred:",e instanceof Error?e.message:String(e)),[]}}return d},p=async(e,{resolution:t="1080",bitrate:r="128",languages:s="ko,en",formatType:a="vtt",outputDir:l=".",downType:i="VSI",key:c="",maxItems:p=1/0}={})=>{l=`${l}/${e}`;let d=await (0,o.getResponse)("playlists",{part:"snippet,contentDetails",id:e},c);(0,n.saveJson)(`${l}/_info.json`,d);try{let n=(await (0,o.getAllResponses)("playlistItems",{part:"contentDetails",playlistId:e},c,p)).map(e=>e.contentDetails.videoId).join(",");return n=[...new Set(n.split(","))].join(","),console.log(n),await u(n,{resolution:t,bitrate:r,languages:s,formatType:a,outputDir:l,downType:i,key:c})}catch(e){return console.error("An error occurred:",e instanceof Error?e.message:String(e)),[]}};