import t from"fs";import e from"child_process";import{getSubtitles as o}from"youtube-captions-scraper";import{getAllResponses as r,getResponse as n,videosFromVideoIds as a}from"./rest.js";import{makeDir as s,saveJson as l}from"jnu-abc";let i=async(t,e)=>{let r=e.split(",").map(t=>t.trim());console.log("languages: ",e);let n=[];for(let e of r){console.log("language: ",e);try{let r=await o({videoID:t,lang:e});console.log(`성공적으로 가져온 자막 언어: ${e||"자동 감지"}`),n.push({language:e,captions:r})}catch(t){console.log(`${e||"자동 감지"} 자막을 가져오는 데 실패했습니다. 다음 언어 시도 중...`)}}return n},c=(t,e="vtt")=>{let o=t=>{let e=new Date(1e3*t),o=e.getUTCHours().toString().padStart(2,"0"),r=e.getUTCMinutes().toString().padStart(2,"0"),n=e.getUTCSeconds().toString().padStart(2,"0"),a=e.getUTCMilliseconds().toString().padStart(3,"0");return`${o}:${r}:${n},${a}`};switch(e.toLowerCase()){case"vtt":return`WEBVTT

${t.map(t=>`${o(t.start).replace(",",".")} --> ${o(parseFloat(t.start)+parseFloat(t.dur)).replace(",",".")}
${t.text}`).join("\n\n")}`;case"srt":return t.map((t,e)=>`${e+1}
${o(t.start)} --> ${o(parseFloat(t.start)+parseFloat(t.dur))}
${t.text}`).join("\n\n");default:return t.map(t=>t.text).join("\n")}},p=async(e,{languages:o="ko,en",formatType:r="vtt",outputDir:n="."}={})=>{let a=await i(e,o);for(let t of a)t.captions=c(t.captions,r);let s=[],l=0;for(let o of a){let a=`${n}/${e}_${o.language}.${r}`;0===l&&(a=`${n}/${e}.${r}`),t.writeFileSync(a,o.captions),s.push(a),l++}return s},u=async(t,{resolution:o="1080",bitrate:r="128",outputDir:n="."}={})=>{let a=`https://www.youtube.com/watch?v=${t}`,s=`yt-dlp -S vcodec:h264,fps,res:${o},acodec:m4a -o "${n}/${t}.mp4" ${a}`;return console.log("command: ",s),e.execSync(s),`${n}/${t}.mp4`},d=async(t,{resolution:e="1080",bitrate:o="128",languages:r="ko,en",formatType:n="vtt",outputDir:i=".",downType:c="VSI",key:d=""})=>{let $={resolution:e,bitrate:o,languages:r,formatType:n,outputDir:i,downs:[]};for(let g of(s(i),t.split(","))){let t={};try{if(c.includes("S")){let e=await p(g,{languages:r,formatType:n,outputDir:i});e&&(t.subtitles=e.map(t=>t.split("/").pop()).join("|"))}if(c.includes("V"))try{let r=await u(g,{resolution:e,bitrate:o,outputDir:i});r&&(t.video=r.split("/").pop(),$.downs.push(t))}catch(t){console.error("An error occurred:",t instanceof Error?t.message:String(t));continue}if(c.includes("I"))try{let t=await a([g],d);console.log("info: ",t),l(`${i}/${g}.json`,t)}catch(t){console.error("An error occurred:",t instanceof Error?t.message:String(t));continue}}catch(t){return console.error("An error occurred:",t instanceof Error?t.message:String(t)),[]}}return $},$=async(t,{resolution:e="1080",bitrate:o="128",languages:a="ko,en",formatType:s="vtt",outputDir:i=".",downType:c="VSI",key:p="",maxItems:u=1/0}={})=>{i=`${i}/${t}`,l(`${i}/_info.json`,await n("playlists",{part:"snippet,contentDetails",id:t},p));try{let n=(await r("playlistItems",{part:"contentDetails",playlistId:t},p,u)).map(t=>t.contentDetails.videoId).join(",");return n=[...new Set(n.split(","))].join(","),console.log(n),await d(n,{resolution:e,bitrate:o,languages:a,formatType:s,outputDir:i,downType:c,key:p})}catch(t){return console.error("An error occurred:",t instanceof Error?t.message:String(t)),[]}};export{p as downloadYoutubeSubtitles,u as downloadYoutubeVideo,d as downloadYoutubeAll,$ as downloadYoutubePlaylist};